// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Protocol.proto
// Protobuf C++ Version: 5.29.3

#ifndef Protocol_2eproto_2epb_2eh
#define Protocol_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "Enum.pb.h"
#include "Struct.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Protocol_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Protocol_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Protocol_2eproto;
namespace Protocol {
class C_ACK;
struct C_ACKDefaultTypeInternal;
extern C_ACKDefaultTypeInternal _C_ACK_default_instance_;
class C_CHARACTER_SYNC;
struct C_CHARACTER_SYNCDefaultTypeInternal;
extern C_CHARACTER_SYNCDefaultTypeInternal _C_CHARACTER_SYNC_default_instance_;
class C_CHAT;
struct C_CHATDefaultTypeInternal;
extern C_CHATDefaultTypeInternal _C_CHAT_default_instance_;
class C_ENTER_GAME;
struct C_ENTER_GAMEDefaultTypeInternal;
extern C_ENTER_GAMEDefaultTypeInternal _C_ENTER_GAME_default_instance_;
class C_HANDSHAKE;
struct C_HANDSHAKEDefaultTypeInternal;
extern C_HANDSHAKEDefaultTypeInternal _C_HANDSHAKE_default_instance_;
class C_LOGIN;
struct C_LOGINDefaultTypeInternal;
extern C_LOGINDefaultTypeInternal _C_LOGIN_default_instance_;
class C_PLAYER_INPUT;
struct C_PLAYER_INPUTDefaultTypeInternal;
extern C_PLAYER_INPUTDefaultTypeInternal _C_PLAYER_INPUT_default_instance_;
class C_SPAWN_ACTOR;
struct C_SPAWN_ACTORDefaultTypeInternal;
extern C_SPAWN_ACTORDefaultTypeInternal _C_SPAWN_ACTOR_default_instance_;
class C_TIMESYNC;
struct C_TIMESYNCDefaultTypeInternal;
extern C_TIMESYNCDefaultTypeInternal _C_TIMESYNC_default_instance_;
class S_ACK;
struct S_ACKDefaultTypeInternal;
extern S_ACKDefaultTypeInternal _S_ACK_default_instance_;
class S_CHARACTER_SYNC;
struct S_CHARACTER_SYNCDefaultTypeInternal;
extern S_CHARACTER_SYNCDefaultTypeInternal _S_CHARACTER_SYNC_default_instance_;
class S_CHAT;
struct S_CHATDefaultTypeInternal;
extern S_CHATDefaultTypeInternal _S_CHAT_default_instance_;
class S_ENTER_GAME;
struct S_ENTER_GAMEDefaultTypeInternal;
extern S_ENTER_GAMEDefaultTypeInternal _S_ENTER_GAME_default_instance_;
class S_HANDSHAKE;
struct S_HANDSHAKEDefaultTypeInternal;
extern S_HANDSHAKEDefaultTypeInternal _S_HANDSHAKE_default_instance_;
class S_LOGIN;
struct S_LOGINDefaultTypeInternal;
extern S_LOGINDefaultTypeInternal _S_LOGIN_default_instance_;
class S_PLAYER_INPUT;
struct S_PLAYER_INPUTDefaultTypeInternal;
extern S_PLAYER_INPUTDefaultTypeInternal _S_PLAYER_INPUT_default_instance_;
class S_SPAWN_ACTOR;
struct S_SPAWN_ACTORDefaultTypeInternal;
extern S_SPAWN_ACTORDefaultTypeInternal _S_SPAWN_ACTOR_default_instance_;
class S_TIMESYNC;
struct S_TIMESYNCDefaultTypeInternal;
extern S_TIMESYNCDefaultTypeInternal _S_TIMESYNC_default_instance_;
}  // namespace Protocol
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Protocol {

// ===================================================================


// -------------------------------------------------------------------

class S_TIMESYNC final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Protocol.S_TIMESYNC) */ {
 public:
  inline S_TIMESYNC() : S_TIMESYNC(nullptr) {}
  ~S_TIMESYNC() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_TIMESYNC* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_TIMESYNC));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_TIMESYNC(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_TIMESYNC(const S_TIMESYNC& from) : S_TIMESYNC(nullptr, from) {}
  inline S_TIMESYNC(S_TIMESYNC&& from) noexcept
      : S_TIMESYNC(nullptr, std::move(from)) {}
  inline S_TIMESYNC& operator=(const S_TIMESYNC& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_TIMESYNC& operator=(S_TIMESYNC&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_TIMESYNC& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_TIMESYNC* internal_default_instance() {
    return reinterpret_cast<const S_TIMESYNC*>(
        &_S_TIMESYNC_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(S_TIMESYNC& a, S_TIMESYNC& b) { a.Swap(&b); }
  inline void Swap(S_TIMESYNC* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_TIMESYNC* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_TIMESYNC* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_TIMESYNC>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_TIMESYNC& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_TIMESYNC& from) { S_TIMESYNC::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_TIMESYNC* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.S_TIMESYNC"; }

 protected:
  explicit S_TIMESYNC(::google::protobuf::Arena* arena);
  S_TIMESYNC(::google::protobuf::Arena* arena, const S_TIMESYNC& from);
  S_TIMESYNC(::google::protobuf::Arena* arena, S_TIMESYNC&& from) noexcept
      : S_TIMESYNC(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimestampFieldNumber = 1,
  };
  // float timestamp = 1;
  void clear_timestamp() ;
  float timestamp() const;
  void set_timestamp(float value);

  private:
  float _internal_timestamp() const;
  void _internal_set_timestamp(float value);

  public:
  // @@protoc_insertion_point(class_scope:Protocol.S_TIMESYNC)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_TIMESYNC& from_msg);
    float timestamp_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class S_LOGIN final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Protocol.S_LOGIN) */ {
 public:
  inline S_LOGIN() : S_LOGIN(nullptr) {}
  ~S_LOGIN() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_LOGIN* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_LOGIN));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_LOGIN(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_LOGIN(const S_LOGIN& from) : S_LOGIN(nullptr, from) {}
  inline S_LOGIN(S_LOGIN&& from) noexcept
      : S_LOGIN(nullptr, std::move(from)) {}
  inline S_LOGIN& operator=(const S_LOGIN& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_LOGIN& operator=(S_LOGIN&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_LOGIN& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_LOGIN* internal_default_instance() {
    return reinterpret_cast<const S_LOGIN*>(
        &_S_LOGIN_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(S_LOGIN& a, S_LOGIN& b) { a.Swap(&b); }
  inline void Swap(S_LOGIN* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_LOGIN* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_LOGIN* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_LOGIN>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_LOGIN& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_LOGIN& from) { S_LOGIN::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_LOGIN* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.S_LOGIN"; }

 protected:
  explicit S_LOGIN(::google::protobuf::Arena* arena);
  S_LOGIN(::google::protobuf::Arena* arena, const S_LOGIN& from);
  S_LOGIN(::google::protobuf::Arena* arena, S_LOGIN&& from) noexcept
      : S_LOGIN(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:Protocol.S_LOGIN)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_LOGIN& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class S_HANDSHAKE final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Protocol.S_HANDSHAKE) */ {
 public:
  inline S_HANDSHAKE() : S_HANDSHAKE(nullptr) {}
  ~S_HANDSHAKE() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_HANDSHAKE* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_HANDSHAKE));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_HANDSHAKE(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_HANDSHAKE(const S_HANDSHAKE& from) : S_HANDSHAKE(nullptr, from) {}
  inline S_HANDSHAKE(S_HANDSHAKE&& from) noexcept
      : S_HANDSHAKE(nullptr, std::move(from)) {}
  inline S_HANDSHAKE& operator=(const S_HANDSHAKE& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_HANDSHAKE& operator=(S_HANDSHAKE&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_HANDSHAKE& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_HANDSHAKE* internal_default_instance() {
    return reinterpret_cast<const S_HANDSHAKE*>(
        &_S_HANDSHAKE_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(S_HANDSHAKE& a, S_HANDSHAKE& b) { a.Swap(&b); }
  inline void Swap(S_HANDSHAKE* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_HANDSHAKE* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_HANDSHAKE* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_HANDSHAKE>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_HANDSHAKE& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_HANDSHAKE& from) { S_HANDSHAKE::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_HANDSHAKE* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.S_HANDSHAKE"; }

 protected:
  explicit S_HANDSHAKE(::google::protobuf::Arena* arena);
  S_HANDSHAKE(::google::protobuf::Arena* arena, const S_HANDSHAKE& from);
  S_HANDSHAKE(::google::protobuf::Arena* arena, S_HANDSHAKE&& from) noexcept
      : S_HANDSHAKE(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:Protocol.S_HANDSHAKE)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_HANDSHAKE& from_msg);
    bool success_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class S_ENTER_GAME final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Protocol.S_ENTER_GAME) */ {
 public:
  inline S_ENTER_GAME() : S_ENTER_GAME(nullptr) {}
  ~S_ENTER_GAME() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_ENTER_GAME* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_ENTER_GAME));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_ENTER_GAME(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_ENTER_GAME(const S_ENTER_GAME& from) : S_ENTER_GAME(nullptr, from) {}
  inline S_ENTER_GAME(S_ENTER_GAME&& from) noexcept
      : S_ENTER_GAME(nullptr, std::move(from)) {}
  inline S_ENTER_GAME& operator=(const S_ENTER_GAME& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_ENTER_GAME& operator=(S_ENTER_GAME&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_ENTER_GAME& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_ENTER_GAME* internal_default_instance() {
    return reinterpret_cast<const S_ENTER_GAME*>(
        &_S_ENTER_GAME_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(S_ENTER_GAME& a, S_ENTER_GAME& b) { a.Swap(&b); }
  inline void Swap(S_ENTER_GAME* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_ENTER_GAME* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_ENTER_GAME* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_ENTER_GAME>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_ENTER_GAME& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_ENTER_GAME& from) { S_ENTER_GAME::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_ENTER_GAME* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.S_ENTER_GAME"; }

 protected:
  explicit S_ENTER_GAME(::google::protobuf::Arena* arena);
  S_ENTER_GAME(::google::protobuf::Arena* arena, const S_ENTER_GAME& from);
  S_ENTER_GAME(::google::protobuf::Arena* arena, S_ENTER_GAME&& from) noexcept
      : S_ENTER_GAME(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIpFieldNumber = 2,
    kSuccessFieldNumber = 1,
    kPortFieldNumber = 3,
  };
  // string ip = 2;
  void clear_ip() ;
  const std::string& ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ip(Arg_&& arg, Args_... args);
  std::string* mutable_ip();
  PROTOBUF_NODISCARD std::string* release_ip();
  void set_allocated_ip(std::string* value);

  private:
  const std::string& _internal_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ip(
      const std::string& value);
  std::string* _internal_mutable_ip();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // uint32 port = 3;
  void clear_port() ;
  ::uint32_t port() const;
  void set_port(::uint32_t value);

  private:
  ::uint32_t _internal_port() const;
  void _internal_set_port(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Protocol.S_ENTER_GAME)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      32, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_ENTER_GAME& from_msg);
    ::google::protobuf::internal::ArenaStringPtr ip_;
    bool success_;
    ::uint32_t port_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class S_CHAT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Protocol.S_CHAT) */ {
 public:
  inline S_CHAT() : S_CHAT(nullptr) {}
  ~S_CHAT() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_CHAT* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_CHAT));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_CHAT(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_CHAT(const S_CHAT& from) : S_CHAT(nullptr, from) {}
  inline S_CHAT(S_CHAT&& from) noexcept
      : S_CHAT(nullptr, std::move(from)) {}
  inline S_CHAT& operator=(const S_CHAT& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_CHAT& operator=(S_CHAT&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_CHAT& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_CHAT* internal_default_instance() {
    return reinterpret_cast<const S_CHAT*>(
        &_S_CHAT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(S_CHAT& a, S_CHAT& b) { a.Swap(&b); }
  inline void Swap(S_CHAT* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_CHAT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_CHAT* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_CHAT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_CHAT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_CHAT& from) { S_CHAT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_CHAT* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.S_CHAT"; }

 protected:
  explicit S_CHAT(::google::protobuf::Arena* arena);
  S_CHAT(::google::protobuf::Arena* arena, const S_CHAT& from);
  S_CHAT(::google::protobuf::Arena* arena, S_CHAT&& from) noexcept
      : S_CHAT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
  };
  // string msg = 2;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // uint64 playerId = 1;
  void clear_playerid() ;
  ::uint64_t playerid() const;
  void set_playerid(::uint64_t value);

  private:
  ::uint64_t _internal_playerid() const;
  void _internal_set_playerid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:Protocol.S_CHAT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      27, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_CHAT& from_msg);
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::uint64_t playerid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class S_ACK final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:Protocol.S_ACK) */ {
 public:
  inline S_ACK() : S_ACK(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_ACK* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_ACK));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_ACK(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_ACK(const S_ACK& from) : S_ACK(nullptr, from) {}
  inline S_ACK(S_ACK&& from) noexcept
      : S_ACK(nullptr, std::move(from)) {}
  inline S_ACK& operator=(const S_ACK& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_ACK& operator=(S_ACK&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_ACK& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_ACK* internal_default_instance() {
    return reinterpret_cast<const S_ACK*>(
        &_S_ACK_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(S_ACK& a, S_ACK& b) { a.Swap(&b); }
  inline void Swap(S_ACK* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_ACK* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_ACK* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<S_ACK>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const S_ACK& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const S_ACK& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.S_ACK"; }

 protected:
  explicit S_ACK(::google::protobuf::Arena* arena);
  S_ACK(::google::protobuf::Arena* arena, const S_ACK& from);
  S_ACK(::google::protobuf::Arena* arena, S_ACK&& from) noexcept
      : S_ACK(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:Protocol.S_ACK)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_ACK& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class C_TIMESYNC final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:Protocol.C_TIMESYNC) */ {
 public:
  inline C_TIMESYNC() : C_TIMESYNC(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_TIMESYNC* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_TIMESYNC));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_TIMESYNC(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_TIMESYNC(const C_TIMESYNC& from) : C_TIMESYNC(nullptr, from) {}
  inline C_TIMESYNC(C_TIMESYNC&& from) noexcept
      : C_TIMESYNC(nullptr, std::move(from)) {}
  inline C_TIMESYNC& operator=(const C_TIMESYNC& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_TIMESYNC& operator=(C_TIMESYNC&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_TIMESYNC& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_TIMESYNC* internal_default_instance() {
    return reinterpret_cast<const C_TIMESYNC*>(
        &_C_TIMESYNC_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(C_TIMESYNC& a, C_TIMESYNC& b) { a.Swap(&b); }
  inline void Swap(C_TIMESYNC* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_TIMESYNC* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_TIMESYNC* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<C_TIMESYNC>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const C_TIMESYNC& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const C_TIMESYNC& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.C_TIMESYNC"; }

 protected:
  explicit C_TIMESYNC(::google::protobuf::Arena* arena);
  C_TIMESYNC(::google::protobuf::Arena* arena, const C_TIMESYNC& from);
  C_TIMESYNC(::google::protobuf::Arena* arena, C_TIMESYNC&& from) noexcept
      : C_TIMESYNC(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:Protocol.C_TIMESYNC)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_TIMESYNC& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class C_SPAWN_ACTOR final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:Protocol.C_SPAWN_ACTOR) */ {
 public:
  inline C_SPAWN_ACTOR() : C_SPAWN_ACTOR(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_SPAWN_ACTOR* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_SPAWN_ACTOR));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_SPAWN_ACTOR(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_SPAWN_ACTOR(const C_SPAWN_ACTOR& from) : C_SPAWN_ACTOR(nullptr, from) {}
  inline C_SPAWN_ACTOR(C_SPAWN_ACTOR&& from) noexcept
      : C_SPAWN_ACTOR(nullptr, std::move(from)) {}
  inline C_SPAWN_ACTOR& operator=(const C_SPAWN_ACTOR& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_SPAWN_ACTOR& operator=(C_SPAWN_ACTOR&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_SPAWN_ACTOR& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_SPAWN_ACTOR* internal_default_instance() {
    return reinterpret_cast<const C_SPAWN_ACTOR*>(
        &_C_SPAWN_ACTOR_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(C_SPAWN_ACTOR& a, C_SPAWN_ACTOR& b) { a.Swap(&b); }
  inline void Swap(C_SPAWN_ACTOR* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_SPAWN_ACTOR* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_SPAWN_ACTOR* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<C_SPAWN_ACTOR>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const C_SPAWN_ACTOR& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const C_SPAWN_ACTOR& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.C_SPAWN_ACTOR"; }

 protected:
  explicit C_SPAWN_ACTOR(::google::protobuf::Arena* arena);
  C_SPAWN_ACTOR(::google::protobuf::Arena* arena, const C_SPAWN_ACTOR& from);
  C_SPAWN_ACTOR(::google::protobuf::Arena* arena, C_SPAWN_ACTOR&& from) noexcept
      : C_SPAWN_ACTOR(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:Protocol.C_SPAWN_ACTOR)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_SPAWN_ACTOR& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class C_PLAYER_INPUT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Protocol.C_PLAYER_INPUT) */ {
 public:
  inline C_PLAYER_INPUT() : C_PLAYER_INPUT(nullptr) {}
  ~C_PLAYER_INPUT() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_PLAYER_INPUT* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_PLAYER_INPUT));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_PLAYER_INPUT(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_PLAYER_INPUT(const C_PLAYER_INPUT& from) : C_PLAYER_INPUT(nullptr, from) {}
  inline C_PLAYER_INPUT(C_PLAYER_INPUT&& from) noexcept
      : C_PLAYER_INPUT(nullptr, std::move(from)) {}
  inline C_PLAYER_INPUT& operator=(const C_PLAYER_INPUT& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_PLAYER_INPUT& operator=(C_PLAYER_INPUT&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_PLAYER_INPUT& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_PLAYER_INPUT* internal_default_instance() {
    return reinterpret_cast<const C_PLAYER_INPUT*>(
        &_C_PLAYER_INPUT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(C_PLAYER_INPUT& a, C_PLAYER_INPUT& b) { a.Swap(&b); }
  inline void Swap(C_PLAYER_INPUT* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_PLAYER_INPUT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_PLAYER_INPUT* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<C_PLAYER_INPUT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C_PLAYER_INPUT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C_PLAYER_INPUT& from) { C_PLAYER_INPUT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(C_PLAYER_INPUT* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.C_PLAYER_INPUT"; }

 protected:
  explicit C_PLAYER_INPUT(::google::protobuf::Arena* arena);
  C_PLAYER_INPUT(::google::protobuf::Arena* arena, const C_PLAYER_INPUT& from);
  C_PLAYER_INPUT(::google::protobuf::Arena* arena, C_PLAYER_INPUT&& from) noexcept
      : C_PLAYER_INPUT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimestampFieldNumber = 1,
    kSequenceNumberFieldNumber = 2,
    kKeyTypeFieldNumber = 3,
    kDeltaTimeFieldNumber = 4,
    kMousePosXFieldNumber = 5,
    kMousePosYFieldNumber = 6,
  };
  // float timestamp = 1;
  void clear_timestamp() ;
  float timestamp() const;
  void set_timestamp(float value);

  private:
  float _internal_timestamp() const;
  void _internal_set_timestamp(float value);

  public:
  // uint32 sequenceNumber = 2;
  void clear_sequencenumber() ;
  ::uint32_t sequencenumber() const;
  void set_sequencenumber(::uint32_t value);

  private:
  ::uint32_t _internal_sequencenumber() const;
  void _internal_set_sequencenumber(::uint32_t value);

  public:
  // .Protocol.KeyType keyType = 3;
  void clear_keytype() ;
  ::Protocol::KeyType keytype() const;
  void set_keytype(::Protocol::KeyType value);

  private:
  ::Protocol::KeyType _internal_keytype() const;
  void _internal_set_keytype(::Protocol::KeyType value);

  public:
  // float deltaTime = 4;
  void clear_deltatime() ;
  float deltatime() const;
  void set_deltatime(float value);

  private:
  float _internal_deltatime() const;
  void _internal_set_deltatime(float value);

  public:
  // optional float mousePosX = 5;
  bool has_mouseposx() const;
  void clear_mouseposx() ;
  float mouseposx() const;
  void set_mouseposx(float value);

  private:
  float _internal_mouseposx() const;
  void _internal_set_mouseposx(float value);

  public:
  // optional float mousePosY = 6;
  bool has_mouseposy() const;
  void clear_mouseposy() ;
  float mouseposy() const;
  void set_mouseposy(float value);

  private:
  float _internal_mouseposy() const;
  void _internal_set_mouseposy(float value);

  public:
  // @@protoc_insertion_point(class_scope:Protocol.C_PLAYER_INPUT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_PLAYER_INPUT& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float timestamp_;
    ::uint32_t sequencenumber_;
    int keytype_;
    float deltatime_;
    float mouseposx_;
    float mouseposy_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class C_LOGIN final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:Protocol.C_LOGIN) */ {
 public:
  inline C_LOGIN() : C_LOGIN(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_LOGIN* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_LOGIN));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_LOGIN(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_LOGIN(const C_LOGIN& from) : C_LOGIN(nullptr, from) {}
  inline C_LOGIN(C_LOGIN&& from) noexcept
      : C_LOGIN(nullptr, std::move(from)) {}
  inline C_LOGIN& operator=(const C_LOGIN& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_LOGIN& operator=(C_LOGIN&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_LOGIN& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_LOGIN* internal_default_instance() {
    return reinterpret_cast<const C_LOGIN*>(
        &_C_LOGIN_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(C_LOGIN& a, C_LOGIN& b) { a.Swap(&b); }
  inline void Swap(C_LOGIN* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_LOGIN* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_LOGIN* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<C_LOGIN>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const C_LOGIN& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const C_LOGIN& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.C_LOGIN"; }

 protected:
  explicit C_LOGIN(::google::protobuf::Arena* arena);
  C_LOGIN(::google::protobuf::Arena* arena, const C_LOGIN& from);
  C_LOGIN(::google::protobuf::Arena* arena, C_LOGIN&& from) noexcept
      : C_LOGIN(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:Protocol.C_LOGIN)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_LOGIN& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class C_HANDSHAKE final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:Protocol.C_HANDSHAKE) */ {
 public:
  inline C_HANDSHAKE() : C_HANDSHAKE(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_HANDSHAKE* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_HANDSHAKE));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_HANDSHAKE(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_HANDSHAKE(const C_HANDSHAKE& from) : C_HANDSHAKE(nullptr, from) {}
  inline C_HANDSHAKE(C_HANDSHAKE&& from) noexcept
      : C_HANDSHAKE(nullptr, std::move(from)) {}
  inline C_HANDSHAKE& operator=(const C_HANDSHAKE& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_HANDSHAKE& operator=(C_HANDSHAKE&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_HANDSHAKE& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_HANDSHAKE* internal_default_instance() {
    return reinterpret_cast<const C_HANDSHAKE*>(
        &_C_HANDSHAKE_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(C_HANDSHAKE& a, C_HANDSHAKE& b) { a.Swap(&b); }
  inline void Swap(C_HANDSHAKE* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_HANDSHAKE* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_HANDSHAKE* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<C_HANDSHAKE>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const C_HANDSHAKE& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const C_HANDSHAKE& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.C_HANDSHAKE"; }

 protected:
  explicit C_HANDSHAKE(::google::protobuf::Arena* arena);
  C_HANDSHAKE(::google::protobuf::Arena* arena, const C_HANDSHAKE& from);
  C_HANDSHAKE(::google::protobuf::Arena* arena, C_HANDSHAKE&& from) noexcept
      : C_HANDSHAKE(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:Protocol.C_HANDSHAKE)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_HANDSHAKE& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class C_ENTER_GAME final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:Protocol.C_ENTER_GAME) */ {
 public:
  inline C_ENTER_GAME() : C_ENTER_GAME(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_ENTER_GAME* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_ENTER_GAME));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_ENTER_GAME(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_ENTER_GAME(const C_ENTER_GAME& from) : C_ENTER_GAME(nullptr, from) {}
  inline C_ENTER_GAME(C_ENTER_GAME&& from) noexcept
      : C_ENTER_GAME(nullptr, std::move(from)) {}
  inline C_ENTER_GAME& operator=(const C_ENTER_GAME& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_ENTER_GAME& operator=(C_ENTER_GAME&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_ENTER_GAME& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_ENTER_GAME* internal_default_instance() {
    return reinterpret_cast<const C_ENTER_GAME*>(
        &_C_ENTER_GAME_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(C_ENTER_GAME& a, C_ENTER_GAME& b) { a.Swap(&b); }
  inline void Swap(C_ENTER_GAME* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_ENTER_GAME* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_ENTER_GAME* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<C_ENTER_GAME>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const C_ENTER_GAME& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const C_ENTER_GAME& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.C_ENTER_GAME"; }

 protected:
  explicit C_ENTER_GAME(::google::protobuf::Arena* arena);
  C_ENTER_GAME(::google::protobuf::Arena* arena, const C_ENTER_GAME& from);
  C_ENTER_GAME(::google::protobuf::Arena* arena, C_ENTER_GAME&& from) noexcept
      : C_ENTER_GAME(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:Protocol.C_ENTER_GAME)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_ENTER_GAME& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class C_CHAT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Protocol.C_CHAT) */ {
 public:
  inline C_CHAT() : C_CHAT(nullptr) {}
  ~C_CHAT() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_CHAT* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_CHAT));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_CHAT(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_CHAT(const C_CHAT& from) : C_CHAT(nullptr, from) {}
  inline C_CHAT(C_CHAT&& from) noexcept
      : C_CHAT(nullptr, std::move(from)) {}
  inline C_CHAT& operator=(const C_CHAT& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_CHAT& operator=(C_CHAT&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_CHAT& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_CHAT* internal_default_instance() {
    return reinterpret_cast<const C_CHAT*>(
        &_C_CHAT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(C_CHAT& a, C_CHAT& b) { a.Swap(&b); }
  inline void Swap(C_CHAT* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_CHAT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_CHAT* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<C_CHAT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C_CHAT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C_CHAT& from) { C_CHAT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(C_CHAT* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.C_CHAT"; }

 protected:
  explicit C_CHAT(::google::protobuf::Arena* arena);
  C_CHAT(::google::protobuf::Arena* arena, const C_CHAT& from);
  C_CHAT(::google::protobuf::Arena* arena, C_CHAT&& from) noexcept
      : C_CHAT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgFieldNumber = 1,
  };
  // string msg = 1;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:Protocol.C_CHAT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      27, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_CHAT& from_msg);
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class C_ACK final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:Protocol.C_ACK) */ {
 public:
  inline C_ACK() : C_ACK(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_ACK* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_ACK));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_ACK(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_ACK(const C_ACK& from) : C_ACK(nullptr, from) {}
  inline C_ACK(C_ACK&& from) noexcept
      : C_ACK(nullptr, std::move(from)) {}
  inline C_ACK& operator=(const C_ACK& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_ACK& operator=(C_ACK&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_ACK& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_ACK* internal_default_instance() {
    return reinterpret_cast<const C_ACK*>(
        &_C_ACK_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(C_ACK& a, C_ACK& b) { a.Swap(&b); }
  inline void Swap(C_ACK* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_ACK* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_ACK* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<C_ACK>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const C_ACK& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const C_ACK& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.C_ACK"; }

 protected:
  explicit C_ACK(::google::protobuf::Arena* arena);
  C_ACK(::google::protobuf::Arena* arena, const C_ACK& from);
  C_ACK(::google::protobuf::Arena* arena, C_ACK&& from) noexcept
      : C_ACK(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:Protocol.C_ACK)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_ACK& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class S_SPAWN_ACTOR final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Protocol.S_SPAWN_ACTOR) */ {
 public:
  inline S_SPAWN_ACTOR() : S_SPAWN_ACTOR(nullptr) {}
  ~S_SPAWN_ACTOR() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_SPAWN_ACTOR* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_SPAWN_ACTOR));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_SPAWN_ACTOR(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_SPAWN_ACTOR(const S_SPAWN_ACTOR& from) : S_SPAWN_ACTOR(nullptr, from) {}
  inline S_SPAWN_ACTOR(S_SPAWN_ACTOR&& from) noexcept
      : S_SPAWN_ACTOR(nullptr, std::move(from)) {}
  inline S_SPAWN_ACTOR& operator=(const S_SPAWN_ACTOR& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_SPAWN_ACTOR& operator=(S_SPAWN_ACTOR&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_SPAWN_ACTOR& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_SPAWN_ACTOR* internal_default_instance() {
    return reinterpret_cast<const S_SPAWN_ACTOR*>(
        &_S_SPAWN_ACTOR_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(S_SPAWN_ACTOR& a, S_SPAWN_ACTOR& b) { a.Swap(&b); }
  inline void Swap(S_SPAWN_ACTOR* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_SPAWN_ACTOR* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_SPAWN_ACTOR* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_SPAWN_ACTOR>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_SPAWN_ACTOR& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_SPAWN_ACTOR& from) { S_SPAWN_ACTOR::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_SPAWN_ACTOR* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.S_SPAWN_ACTOR"; }

 protected:
  explicit S_SPAWN_ACTOR(::google::protobuf::Arena* arena);
  S_SPAWN_ACTOR(::google::protobuf::Arena* arena, const S_SPAWN_ACTOR& from);
  S_SPAWN_ACTOR(::google::protobuf::Arena* arena, S_SPAWN_ACTOR&& from) noexcept
      : S_SPAWN_ACTOR(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCharacterInfoFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
  };
  // repeated .Protocol.CharacterInfo characterInfo = 2;
  int characterinfo_size() const;
  private:
  int _internal_characterinfo_size() const;

  public:
  void clear_characterinfo() ;
  ::Protocol::CharacterInfo* mutable_characterinfo(int index);
  ::google::protobuf::RepeatedPtrField<::Protocol::CharacterInfo>* mutable_characterinfo();

  private:
  const ::google::protobuf::RepeatedPtrField<::Protocol::CharacterInfo>& _internal_characterinfo() const;
  ::google::protobuf::RepeatedPtrField<::Protocol::CharacterInfo>* _internal_mutable_characterinfo();
  public:
  const ::Protocol::CharacterInfo& characterinfo(int index) const;
  ::Protocol::CharacterInfo* add_characterinfo();
  const ::google::protobuf::RepeatedPtrField<::Protocol::CharacterInfo>& characterinfo() const;
  // uint32 playerId = 1;
  void clear_playerid() ;
  ::uint32_t playerid() const;
  void set_playerid(::uint32_t value);

  private:
  ::uint32_t _internal_playerid() const;
  void _internal_set_playerid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Protocol.S_SPAWN_ACTOR)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_SPAWN_ACTOR& from_msg);
    ::google::protobuf::RepeatedPtrField< ::Protocol::CharacterInfo > characterinfo_;
    ::uint32_t playerid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class S_PLAYER_INPUT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Protocol.S_PLAYER_INPUT) */ {
 public:
  inline S_PLAYER_INPUT() : S_PLAYER_INPUT(nullptr) {}
  ~S_PLAYER_INPUT() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_PLAYER_INPUT* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_PLAYER_INPUT));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_PLAYER_INPUT(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_PLAYER_INPUT(const S_PLAYER_INPUT& from) : S_PLAYER_INPUT(nullptr, from) {}
  inline S_PLAYER_INPUT(S_PLAYER_INPUT&& from) noexcept
      : S_PLAYER_INPUT(nullptr, std::move(from)) {}
  inline S_PLAYER_INPUT& operator=(const S_PLAYER_INPUT& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_PLAYER_INPUT& operator=(S_PLAYER_INPUT&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_PLAYER_INPUT& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_PLAYER_INPUT* internal_default_instance() {
    return reinterpret_cast<const S_PLAYER_INPUT*>(
        &_S_PLAYER_INPUT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(S_PLAYER_INPUT& a, S_PLAYER_INPUT& b) { a.Swap(&b); }
  inline void Swap(S_PLAYER_INPUT* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_PLAYER_INPUT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_PLAYER_INPUT* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_PLAYER_INPUT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_PLAYER_INPUT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_PLAYER_INPUT& from) { S_PLAYER_INPUT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_PLAYER_INPUT* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.S_PLAYER_INPUT"; }

 protected:
  explicit S_PLAYER_INPUT(::google::protobuf::Arena* arena);
  S_PLAYER_INPUT(::google::protobuf::Arena* arena, const S_PLAYER_INPUT& from);
  S_PLAYER_INPUT(::google::protobuf::Arena* arena, S_PLAYER_INPUT&& from) noexcept
      : S_PLAYER_INPUT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCharacterInfoFieldNumber = 2,
    kSequenceNumberFieldNumber = 1,
  };
  // .Protocol.CharacterInfo CharacterInfo = 2;
  bool has_characterinfo() const;
  void clear_characterinfo() ;
  const ::Protocol::CharacterInfo& characterinfo() const;
  PROTOBUF_NODISCARD ::Protocol::CharacterInfo* release_characterinfo();
  ::Protocol::CharacterInfo* mutable_characterinfo();
  void set_allocated_characterinfo(::Protocol::CharacterInfo* value);
  void unsafe_arena_set_allocated_characterinfo(::Protocol::CharacterInfo* value);
  ::Protocol::CharacterInfo* unsafe_arena_release_characterinfo();

  private:
  const ::Protocol::CharacterInfo& _internal_characterinfo() const;
  ::Protocol::CharacterInfo* _internal_mutable_characterinfo();

  public:
  // uint32 sequenceNumber = 1;
  void clear_sequencenumber() ;
  ::uint32_t sequencenumber() const;
  void set_sequencenumber(::uint32_t value);

  private:
  ::uint32_t _internal_sequencenumber() const;
  void _internal_set_sequencenumber(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Protocol.S_PLAYER_INPUT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_PLAYER_INPUT& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::Protocol::CharacterInfo* characterinfo_;
    ::uint32_t sequencenumber_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class S_CHARACTER_SYNC final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Protocol.S_CHARACTER_SYNC) */ {
 public:
  inline S_CHARACTER_SYNC() : S_CHARACTER_SYNC(nullptr) {}
  ~S_CHARACTER_SYNC() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(S_CHARACTER_SYNC* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(S_CHARACTER_SYNC));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR S_CHARACTER_SYNC(
      ::google::protobuf::internal::ConstantInitialized);

  inline S_CHARACTER_SYNC(const S_CHARACTER_SYNC& from) : S_CHARACTER_SYNC(nullptr, from) {}
  inline S_CHARACTER_SYNC(S_CHARACTER_SYNC&& from) noexcept
      : S_CHARACTER_SYNC(nullptr, std::move(from)) {}
  inline S_CHARACTER_SYNC& operator=(const S_CHARACTER_SYNC& from) {
    CopyFrom(from);
    return *this;
  }
  inline S_CHARACTER_SYNC& operator=(S_CHARACTER_SYNC&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const S_CHARACTER_SYNC& default_instance() {
    return *internal_default_instance();
  }
  static inline const S_CHARACTER_SYNC* internal_default_instance() {
    return reinterpret_cast<const S_CHARACTER_SYNC*>(
        &_S_CHARACTER_SYNC_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(S_CHARACTER_SYNC& a, S_CHARACTER_SYNC& b) { a.Swap(&b); }
  inline void Swap(S_CHARACTER_SYNC* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(S_CHARACTER_SYNC* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  S_CHARACTER_SYNC* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<S_CHARACTER_SYNC>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const S_CHARACTER_SYNC& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const S_CHARACTER_SYNC& from) { S_CHARACTER_SYNC::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(S_CHARACTER_SYNC* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.S_CHARACTER_SYNC"; }

 protected:
  explicit S_CHARACTER_SYNC(::google::protobuf::Arena* arena);
  S_CHARACTER_SYNC(::google::protobuf::Arena* arena, const S_CHARACTER_SYNC& from);
  S_CHARACTER_SYNC(::google::protobuf::Arena* arena, S_CHARACTER_SYNC&& from) noexcept
      : S_CHARACTER_SYNC(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCharacterInfoFieldNumber = 2,
    kTimestampFieldNumber = 1,
  };
  // repeated .Protocol.CharacterInfo characterInfo = 2;
  int characterinfo_size() const;
  private:
  int _internal_characterinfo_size() const;

  public:
  void clear_characterinfo() ;
  ::Protocol::CharacterInfo* mutable_characterinfo(int index);
  ::google::protobuf::RepeatedPtrField<::Protocol::CharacterInfo>* mutable_characterinfo();

  private:
  const ::google::protobuf::RepeatedPtrField<::Protocol::CharacterInfo>& _internal_characterinfo() const;
  ::google::protobuf::RepeatedPtrField<::Protocol::CharacterInfo>* _internal_mutable_characterinfo();
  public:
  const ::Protocol::CharacterInfo& characterinfo(int index) const;
  ::Protocol::CharacterInfo* add_characterinfo();
  const ::google::protobuf::RepeatedPtrField<::Protocol::CharacterInfo>& characterinfo() const;
  // float timestamp = 1;
  void clear_timestamp() ;
  float timestamp() const;
  void set_timestamp(float value);

  private:
  float _internal_timestamp() const;
  void _internal_set_timestamp(float value);

  public:
  // @@protoc_insertion_point(class_scope:Protocol.S_CHARACTER_SYNC)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const S_CHARACTER_SYNC& from_msg);
    ::google::protobuf::RepeatedPtrField< ::Protocol::CharacterInfo > characterinfo_;
    float timestamp_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};
// -------------------------------------------------------------------

class C_CHARACTER_SYNC final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Protocol.C_CHARACTER_SYNC) */ {
 public:
  inline C_CHARACTER_SYNC() : C_CHARACTER_SYNC(nullptr) {}
  ~C_CHARACTER_SYNC() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(C_CHARACTER_SYNC* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(C_CHARACTER_SYNC));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR C_CHARACTER_SYNC(
      ::google::protobuf::internal::ConstantInitialized);

  inline C_CHARACTER_SYNC(const C_CHARACTER_SYNC& from) : C_CHARACTER_SYNC(nullptr, from) {}
  inline C_CHARACTER_SYNC(C_CHARACTER_SYNC&& from) noexcept
      : C_CHARACTER_SYNC(nullptr, std::move(from)) {}
  inline C_CHARACTER_SYNC& operator=(const C_CHARACTER_SYNC& from) {
    CopyFrom(from);
    return *this;
  }
  inline C_CHARACTER_SYNC& operator=(C_CHARACTER_SYNC&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const C_CHARACTER_SYNC& default_instance() {
    return *internal_default_instance();
  }
  static inline const C_CHARACTER_SYNC* internal_default_instance() {
    return reinterpret_cast<const C_CHARACTER_SYNC*>(
        &_C_CHARACTER_SYNC_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(C_CHARACTER_SYNC& a, C_CHARACTER_SYNC& b) { a.Swap(&b); }
  inline void Swap(C_CHARACTER_SYNC* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C_CHARACTER_SYNC* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  C_CHARACTER_SYNC* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<C_CHARACTER_SYNC>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const C_CHARACTER_SYNC& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const C_CHARACTER_SYNC& from) { C_CHARACTER_SYNC::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(C_CHARACTER_SYNC* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Protocol.C_CHARACTER_SYNC"; }

 protected:
  explicit C_CHARACTER_SYNC(::google::protobuf::Arena* arena);
  C_CHARACTER_SYNC(::google::protobuf::Arena* arena, const C_CHARACTER_SYNC& from);
  C_CHARACTER_SYNC(::google::protobuf::Arena* arena, C_CHARACTER_SYNC&& from) noexcept
      : C_CHARACTER_SYNC(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCharacterInfoFieldNumber = 2,
    kTimestampFieldNumber = 1,
  };
  // .Protocol.CharacterInfo characterInfo = 2;
  bool has_characterinfo() const;
  void clear_characterinfo() ;
  const ::Protocol::CharacterInfo& characterinfo() const;
  PROTOBUF_NODISCARD ::Protocol::CharacterInfo* release_characterinfo();
  ::Protocol::CharacterInfo* mutable_characterinfo();
  void set_allocated_characterinfo(::Protocol::CharacterInfo* value);
  void unsafe_arena_set_allocated_characterinfo(::Protocol::CharacterInfo* value);
  ::Protocol::CharacterInfo* unsafe_arena_release_characterinfo();

  private:
  const ::Protocol::CharacterInfo& _internal_characterinfo() const;
  ::Protocol::CharacterInfo* _internal_mutable_characterinfo();

  public:
  // float timestamp = 1;
  void clear_timestamp() ;
  float timestamp() const;
  void set_timestamp(float value);

  private:
  float _internal_timestamp() const;
  void _internal_set_timestamp(float value);

  public:
  // @@protoc_insertion_point(class_scope:Protocol.C_CHARACTER_SYNC)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const C_CHARACTER_SYNC& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::Protocol::CharacterInfo* characterinfo_;
    float timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Protocol_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// C_LOGIN

// -------------------------------------------------------------------

// S_LOGIN

// bool success = 1;
inline void S_LOGIN::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool S_LOGIN::success() const {
  // @@protoc_insertion_point(field_get:Protocol.S_LOGIN.success)
  return _internal_success();
}
inline void S_LOGIN::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:Protocol.S_LOGIN.success)
}
inline bool S_LOGIN::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void S_LOGIN::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// C_ENTER_GAME

// -------------------------------------------------------------------

// S_ENTER_GAME

// bool success = 1;
inline void S_ENTER_GAME::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool S_ENTER_GAME::success() const {
  // @@protoc_insertion_point(field_get:Protocol.S_ENTER_GAME.success)
  return _internal_success();
}
inline void S_ENTER_GAME::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:Protocol.S_ENTER_GAME.success)
}
inline bool S_ENTER_GAME::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void S_ENTER_GAME::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string ip = 2;
inline void S_ENTER_GAME::clear_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_.ClearToEmpty();
}
inline const std::string& S_ENTER_GAME::ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Protocol.S_ENTER_GAME.ip)
  return _internal_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S_ENTER_GAME::set_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Protocol.S_ENTER_GAME.ip)
}
inline std::string* S_ENTER_GAME::mutable_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ip();
  // @@protoc_insertion_point(field_mutable:Protocol.S_ENTER_GAME.ip)
  return _s;
}
inline const std::string& S_ENTER_GAME::_internal_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ip_.Get();
}
inline void S_ENTER_GAME::_internal_set_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_.Set(value, GetArena());
}
inline std::string* S_ENTER_GAME::_internal_mutable_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ip_.Mutable( GetArena());
}
inline std::string* S_ENTER_GAME::release_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Protocol.S_ENTER_GAME.ip)
  return _impl_.ip_.Release();
}
inline void S_ENTER_GAME::set_allocated_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ip_.IsDefault()) {
    _impl_.ip_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Protocol.S_ENTER_GAME.ip)
}

// uint32 port = 3;
inline void S_ENTER_GAME::clear_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = 0u;
}
inline ::uint32_t S_ENTER_GAME::port() const {
  // @@protoc_insertion_point(field_get:Protocol.S_ENTER_GAME.port)
  return _internal_port();
}
inline void S_ENTER_GAME::set_port(::uint32_t value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:Protocol.S_ENTER_GAME.port)
}
inline ::uint32_t S_ENTER_GAME::_internal_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_;
}
inline void S_ENTER_GAME::_internal_set_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = value;
}

// -------------------------------------------------------------------

// C_ACK

// -------------------------------------------------------------------

// S_ACK

// -------------------------------------------------------------------

// C_HANDSHAKE

// -------------------------------------------------------------------

// S_HANDSHAKE

// bool success = 1;
inline void S_HANDSHAKE::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool S_HANDSHAKE::success() const {
  // @@protoc_insertion_point(field_get:Protocol.S_HANDSHAKE.success)
  return _internal_success();
}
inline void S_HANDSHAKE::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:Protocol.S_HANDSHAKE.success)
}
inline bool S_HANDSHAKE::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void S_HANDSHAKE::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// C_CHAT

// string msg = 1;
inline void C_CHAT::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& C_CHAT::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Protocol.C_CHAT.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void C_CHAT::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Protocol.C_CHAT.msg)
}
inline std::string* C_CHAT::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:Protocol.C_CHAT.msg)
  return _s;
}
inline const std::string& C_CHAT::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void C_CHAT::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* C_CHAT::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* C_CHAT::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Protocol.C_CHAT.msg)
  return _impl_.msg_.Release();
}
inline void C_CHAT::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_.IsDefault()) {
    _impl_.msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Protocol.C_CHAT.msg)
}

// -------------------------------------------------------------------

// S_CHAT

// uint64 playerId = 1;
inline void S_CHAT::clear_playerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playerid_ = ::uint64_t{0u};
}
inline ::uint64_t S_CHAT::playerid() const {
  // @@protoc_insertion_point(field_get:Protocol.S_CHAT.playerId)
  return _internal_playerid();
}
inline void S_CHAT::set_playerid(::uint64_t value) {
  _internal_set_playerid(value);
  // @@protoc_insertion_point(field_set:Protocol.S_CHAT.playerId)
}
inline ::uint64_t S_CHAT::_internal_playerid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playerid_;
}
inline void S_CHAT::_internal_set_playerid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playerid_ = value;
}

// string msg = 2;
inline void S_CHAT::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& S_CHAT::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Protocol.S_CHAT.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void S_CHAT::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Protocol.S_CHAT.msg)
}
inline std::string* S_CHAT::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:Protocol.S_CHAT.msg)
  return _s;
}
inline const std::string& S_CHAT::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void S_CHAT::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* S_CHAT::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* S_CHAT::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Protocol.S_CHAT.msg)
  return _impl_.msg_.Release();
}
inline void S_CHAT::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_.IsDefault()) {
    _impl_.msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Protocol.S_CHAT.msg)
}

// -------------------------------------------------------------------

// C_TIMESYNC

// -------------------------------------------------------------------

// S_TIMESYNC

// float timestamp = 1;
inline void S_TIMESYNC::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = 0;
}
inline float S_TIMESYNC::timestamp() const {
  // @@protoc_insertion_point(field_get:Protocol.S_TIMESYNC.timestamp)
  return _internal_timestamp();
}
inline void S_TIMESYNC::set_timestamp(float value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:Protocol.S_TIMESYNC.timestamp)
}
inline float S_TIMESYNC::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void S_TIMESYNC::_internal_set_timestamp(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// -------------------------------------------------------------------

// C_SPAWN_ACTOR

// -------------------------------------------------------------------

// S_SPAWN_ACTOR

// uint32 playerId = 1;
inline void S_SPAWN_ACTOR::clear_playerid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playerid_ = 0u;
}
inline ::uint32_t S_SPAWN_ACTOR::playerid() const {
  // @@protoc_insertion_point(field_get:Protocol.S_SPAWN_ACTOR.playerId)
  return _internal_playerid();
}
inline void S_SPAWN_ACTOR::set_playerid(::uint32_t value) {
  _internal_set_playerid(value);
  // @@protoc_insertion_point(field_set:Protocol.S_SPAWN_ACTOR.playerId)
}
inline ::uint32_t S_SPAWN_ACTOR::_internal_playerid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playerid_;
}
inline void S_SPAWN_ACTOR::_internal_set_playerid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playerid_ = value;
}

// repeated .Protocol.CharacterInfo characterInfo = 2;
inline int S_SPAWN_ACTOR::_internal_characterinfo_size() const {
  return _internal_characterinfo().size();
}
inline int S_SPAWN_ACTOR::characterinfo_size() const {
  return _internal_characterinfo_size();
}
inline ::Protocol::CharacterInfo* S_SPAWN_ACTOR::mutable_characterinfo(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Protocol.S_SPAWN_ACTOR.characterInfo)
  return _internal_mutable_characterinfo()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Protocol::CharacterInfo>* S_SPAWN_ACTOR::mutable_characterinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Protocol.S_SPAWN_ACTOR.characterInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_characterinfo();
}
inline const ::Protocol::CharacterInfo& S_SPAWN_ACTOR::characterinfo(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Protocol.S_SPAWN_ACTOR.characterInfo)
  return _internal_characterinfo().Get(index);
}
inline ::Protocol::CharacterInfo* S_SPAWN_ACTOR::add_characterinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Protocol::CharacterInfo* _add = _internal_mutable_characterinfo()->Add();
  // @@protoc_insertion_point(field_add:Protocol.S_SPAWN_ACTOR.characterInfo)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Protocol::CharacterInfo>& S_SPAWN_ACTOR::characterinfo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Protocol.S_SPAWN_ACTOR.characterInfo)
  return _internal_characterinfo();
}
inline const ::google::protobuf::RepeatedPtrField<::Protocol::CharacterInfo>&
S_SPAWN_ACTOR::_internal_characterinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterinfo_;
}
inline ::google::protobuf::RepeatedPtrField<::Protocol::CharacterInfo>*
S_SPAWN_ACTOR::_internal_mutable_characterinfo() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.characterinfo_;
}

// -------------------------------------------------------------------

// C_CHARACTER_SYNC

// float timestamp = 1;
inline void C_CHARACTER_SYNC::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = 0;
}
inline float C_CHARACTER_SYNC::timestamp() const {
  // @@protoc_insertion_point(field_get:Protocol.C_CHARACTER_SYNC.timestamp)
  return _internal_timestamp();
}
inline void C_CHARACTER_SYNC::set_timestamp(float value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:Protocol.C_CHARACTER_SYNC.timestamp)
}
inline float C_CHARACTER_SYNC::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void C_CHARACTER_SYNC::_internal_set_timestamp(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// .Protocol.CharacterInfo characterInfo = 2;
inline bool C_CHARACTER_SYNC::has_characterinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.characterinfo_ != nullptr);
  return value;
}
inline const ::Protocol::CharacterInfo& C_CHARACTER_SYNC::_internal_characterinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Protocol::CharacterInfo* p = _impl_.characterinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::Protocol::CharacterInfo&>(::Protocol::_CharacterInfo_default_instance_);
}
inline const ::Protocol::CharacterInfo& C_CHARACTER_SYNC::characterinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Protocol.C_CHARACTER_SYNC.characterInfo)
  return _internal_characterinfo();
}
inline void C_CHARACTER_SYNC::unsafe_arena_set_allocated_characterinfo(::Protocol::CharacterInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.characterinfo_);
  }
  _impl_.characterinfo_ = reinterpret_cast<::Protocol::CharacterInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Protocol.C_CHARACTER_SYNC.characterInfo)
}
inline ::Protocol::CharacterInfo* C_CHARACTER_SYNC::release_characterinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Protocol::CharacterInfo* released = _impl_.characterinfo_;
  _impl_.characterinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Protocol::CharacterInfo* C_CHARACTER_SYNC::unsafe_arena_release_characterinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Protocol.C_CHARACTER_SYNC.characterInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Protocol::CharacterInfo* temp = _impl_.characterinfo_;
  _impl_.characterinfo_ = nullptr;
  return temp;
}
inline ::Protocol::CharacterInfo* C_CHARACTER_SYNC::_internal_mutable_characterinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.characterinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Protocol::CharacterInfo>(GetArena());
    _impl_.characterinfo_ = reinterpret_cast<::Protocol::CharacterInfo*>(p);
  }
  return _impl_.characterinfo_;
}
inline ::Protocol::CharacterInfo* C_CHARACTER_SYNC::mutable_characterinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Protocol::CharacterInfo* _msg = _internal_mutable_characterinfo();
  // @@protoc_insertion_point(field_mutable:Protocol.C_CHARACTER_SYNC.characterInfo)
  return _msg;
}
inline void C_CHARACTER_SYNC::set_allocated_characterinfo(::Protocol::CharacterInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.characterinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.characterinfo_ = reinterpret_cast<::Protocol::CharacterInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:Protocol.C_CHARACTER_SYNC.characterInfo)
}

// -------------------------------------------------------------------

// S_CHARACTER_SYNC

// float timestamp = 1;
inline void S_CHARACTER_SYNC::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = 0;
}
inline float S_CHARACTER_SYNC::timestamp() const {
  // @@protoc_insertion_point(field_get:Protocol.S_CHARACTER_SYNC.timestamp)
  return _internal_timestamp();
}
inline void S_CHARACTER_SYNC::set_timestamp(float value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:Protocol.S_CHARACTER_SYNC.timestamp)
}
inline float S_CHARACTER_SYNC::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void S_CHARACTER_SYNC::_internal_set_timestamp(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// repeated .Protocol.CharacterInfo characterInfo = 2;
inline int S_CHARACTER_SYNC::_internal_characterinfo_size() const {
  return _internal_characterinfo().size();
}
inline int S_CHARACTER_SYNC::characterinfo_size() const {
  return _internal_characterinfo_size();
}
inline ::Protocol::CharacterInfo* S_CHARACTER_SYNC::mutable_characterinfo(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Protocol.S_CHARACTER_SYNC.characterInfo)
  return _internal_mutable_characterinfo()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Protocol::CharacterInfo>* S_CHARACTER_SYNC::mutable_characterinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Protocol.S_CHARACTER_SYNC.characterInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_characterinfo();
}
inline const ::Protocol::CharacterInfo& S_CHARACTER_SYNC::characterinfo(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Protocol.S_CHARACTER_SYNC.characterInfo)
  return _internal_characterinfo().Get(index);
}
inline ::Protocol::CharacterInfo* S_CHARACTER_SYNC::add_characterinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Protocol::CharacterInfo* _add = _internal_mutable_characterinfo()->Add();
  // @@protoc_insertion_point(field_add:Protocol.S_CHARACTER_SYNC.characterInfo)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Protocol::CharacterInfo>& S_CHARACTER_SYNC::characterinfo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Protocol.S_CHARACTER_SYNC.characterInfo)
  return _internal_characterinfo();
}
inline const ::google::protobuf::RepeatedPtrField<::Protocol::CharacterInfo>&
S_CHARACTER_SYNC::_internal_characterinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.characterinfo_;
}
inline ::google::protobuf::RepeatedPtrField<::Protocol::CharacterInfo>*
S_CHARACTER_SYNC::_internal_mutable_characterinfo() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.characterinfo_;
}

// -------------------------------------------------------------------

// C_PLAYER_INPUT

// float timestamp = 1;
inline void C_PLAYER_INPUT::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = 0;
}
inline float C_PLAYER_INPUT::timestamp() const {
  // @@protoc_insertion_point(field_get:Protocol.C_PLAYER_INPUT.timestamp)
  return _internal_timestamp();
}
inline void C_PLAYER_INPUT::set_timestamp(float value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:Protocol.C_PLAYER_INPUT.timestamp)
}
inline float C_PLAYER_INPUT::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void C_PLAYER_INPUT::_internal_set_timestamp(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// uint32 sequenceNumber = 2;
inline void C_PLAYER_INPUT::clear_sequencenumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequencenumber_ = 0u;
}
inline ::uint32_t C_PLAYER_INPUT::sequencenumber() const {
  // @@protoc_insertion_point(field_get:Protocol.C_PLAYER_INPUT.sequenceNumber)
  return _internal_sequencenumber();
}
inline void C_PLAYER_INPUT::set_sequencenumber(::uint32_t value) {
  _internal_set_sequencenumber(value);
  // @@protoc_insertion_point(field_set:Protocol.C_PLAYER_INPUT.sequenceNumber)
}
inline ::uint32_t C_PLAYER_INPUT::_internal_sequencenumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sequencenumber_;
}
inline void C_PLAYER_INPUT::_internal_set_sequencenumber(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequencenumber_ = value;
}

// .Protocol.KeyType keyType = 3;
inline void C_PLAYER_INPUT::clear_keytype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.keytype_ = 0;
}
inline ::Protocol::KeyType C_PLAYER_INPUT::keytype() const {
  // @@protoc_insertion_point(field_get:Protocol.C_PLAYER_INPUT.keyType)
  return _internal_keytype();
}
inline void C_PLAYER_INPUT::set_keytype(::Protocol::KeyType value) {
  _internal_set_keytype(value);
  // @@protoc_insertion_point(field_set:Protocol.C_PLAYER_INPUT.keyType)
}
inline ::Protocol::KeyType C_PLAYER_INPUT::_internal_keytype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Protocol::KeyType>(_impl_.keytype_);
}
inline void C_PLAYER_INPUT::_internal_set_keytype(::Protocol::KeyType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.keytype_ = value;
}

// float deltaTime = 4;
inline void C_PLAYER_INPUT::clear_deltatime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deltatime_ = 0;
}
inline float C_PLAYER_INPUT::deltatime() const {
  // @@protoc_insertion_point(field_get:Protocol.C_PLAYER_INPUT.deltaTime)
  return _internal_deltatime();
}
inline void C_PLAYER_INPUT::set_deltatime(float value) {
  _internal_set_deltatime(value);
  // @@protoc_insertion_point(field_set:Protocol.C_PLAYER_INPUT.deltaTime)
}
inline float C_PLAYER_INPUT::_internal_deltatime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deltatime_;
}
inline void C_PLAYER_INPUT::_internal_set_deltatime(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deltatime_ = value;
}

// optional float mousePosX = 5;
inline bool C_PLAYER_INPUT::has_mouseposx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void C_PLAYER_INPUT::clear_mouseposx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mouseposx_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float C_PLAYER_INPUT::mouseposx() const {
  // @@protoc_insertion_point(field_get:Protocol.C_PLAYER_INPUT.mousePosX)
  return _internal_mouseposx();
}
inline void C_PLAYER_INPUT::set_mouseposx(float value) {
  _internal_set_mouseposx(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:Protocol.C_PLAYER_INPUT.mousePosX)
}
inline float C_PLAYER_INPUT::_internal_mouseposx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mouseposx_;
}
inline void C_PLAYER_INPUT::_internal_set_mouseposx(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mouseposx_ = value;
}

// optional float mousePosY = 6;
inline bool C_PLAYER_INPUT::has_mouseposy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void C_PLAYER_INPUT::clear_mouseposy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mouseposy_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float C_PLAYER_INPUT::mouseposy() const {
  // @@protoc_insertion_point(field_get:Protocol.C_PLAYER_INPUT.mousePosY)
  return _internal_mouseposy();
}
inline void C_PLAYER_INPUT::set_mouseposy(float value) {
  _internal_set_mouseposy(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:Protocol.C_PLAYER_INPUT.mousePosY)
}
inline float C_PLAYER_INPUT::_internal_mouseposy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mouseposy_;
}
inline void C_PLAYER_INPUT::_internal_set_mouseposy(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mouseposy_ = value;
}

// -------------------------------------------------------------------

// S_PLAYER_INPUT

// uint32 sequenceNumber = 1;
inline void S_PLAYER_INPUT::clear_sequencenumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequencenumber_ = 0u;
}
inline ::uint32_t S_PLAYER_INPUT::sequencenumber() const {
  // @@protoc_insertion_point(field_get:Protocol.S_PLAYER_INPUT.sequenceNumber)
  return _internal_sequencenumber();
}
inline void S_PLAYER_INPUT::set_sequencenumber(::uint32_t value) {
  _internal_set_sequencenumber(value);
  // @@protoc_insertion_point(field_set:Protocol.S_PLAYER_INPUT.sequenceNumber)
}
inline ::uint32_t S_PLAYER_INPUT::_internal_sequencenumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sequencenumber_;
}
inline void S_PLAYER_INPUT::_internal_set_sequencenumber(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequencenumber_ = value;
}

// .Protocol.CharacterInfo CharacterInfo = 2;
inline bool S_PLAYER_INPUT::has_characterinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.characterinfo_ != nullptr);
  return value;
}
inline const ::Protocol::CharacterInfo& S_PLAYER_INPUT::_internal_characterinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Protocol::CharacterInfo* p = _impl_.characterinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::Protocol::CharacterInfo&>(::Protocol::_CharacterInfo_default_instance_);
}
inline const ::Protocol::CharacterInfo& S_PLAYER_INPUT::characterinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Protocol.S_PLAYER_INPUT.CharacterInfo)
  return _internal_characterinfo();
}
inline void S_PLAYER_INPUT::unsafe_arena_set_allocated_characterinfo(::Protocol::CharacterInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.characterinfo_);
  }
  _impl_.characterinfo_ = reinterpret_cast<::Protocol::CharacterInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Protocol.S_PLAYER_INPUT.CharacterInfo)
}
inline ::Protocol::CharacterInfo* S_PLAYER_INPUT::release_characterinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Protocol::CharacterInfo* released = _impl_.characterinfo_;
  _impl_.characterinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Protocol::CharacterInfo* S_PLAYER_INPUT::unsafe_arena_release_characterinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Protocol.S_PLAYER_INPUT.CharacterInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Protocol::CharacterInfo* temp = _impl_.characterinfo_;
  _impl_.characterinfo_ = nullptr;
  return temp;
}
inline ::Protocol::CharacterInfo* S_PLAYER_INPUT::_internal_mutable_characterinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.characterinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Protocol::CharacterInfo>(GetArena());
    _impl_.characterinfo_ = reinterpret_cast<::Protocol::CharacterInfo*>(p);
  }
  return _impl_.characterinfo_;
}
inline ::Protocol::CharacterInfo* S_PLAYER_INPUT::mutable_characterinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Protocol::CharacterInfo* _msg = _internal_mutable_characterinfo();
  // @@protoc_insertion_point(field_mutable:Protocol.S_PLAYER_INPUT.CharacterInfo)
  return _msg;
}
inline void S_PLAYER_INPUT::set_allocated_characterinfo(::Protocol::CharacterInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.characterinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.characterinfo_ = reinterpret_cast<::Protocol::CharacterInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:Protocol.S_PLAYER_INPUT.CharacterInfo)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // Protocol_2eproto_2epb_2eh
