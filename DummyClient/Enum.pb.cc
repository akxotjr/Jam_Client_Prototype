// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Enum.proto
// Protobuf C++ Version: 5.29.3

#include "Enum.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Protocol {
}  // namespace Protocol
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_Enum_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Enum_2eproto = nullptr;
const ::uint32_t TableStruct_Enum_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;
const char descriptor_table_protodef_Enum_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nEnum.proto\022\010Protocol*\336\001\n\007KeyType\022\014\n\010KE"
    "Y_NONE\020\000\022\022\n\016KEY_LEFT_MOUSE\020\001\022\023\n\017KEY_RIGH"
    "T_MOUSE\020\002\022\t\n\005KEY_W\020\n\022\t\n\005KEY_A\020\013\022\t\n\005KEY_S"
    "\020\014\022\t\n\005KEY_D\020\r\022\t\n\005KEY_Q\020\016\022\t\n\005KEY_E\020\017\022\n\n\006K"
    "EY_UP\020\024\022\014\n\010KEY_DOWN\020\025\022\014\n\010KEY_LEFT\020\026\022\r\n\tK"
    "EY_RIGHT\020\027\022\r\n\tKEY_SPACE\020\036\022\t\n\005KEY_1\020\037\022\t\n\005"
    "KEY_2\020 *h\n\nPlayerType\022\024\n\020PLAYER_TYPE_NON"
    "E\020\000\022\026\n\022PLAYER_TYPE_KNIGHT\020\001\022\024\n\020PLAYER_TY"
    "PE_MAGE\020\002\022\026\n\022PLAYER_TYPE_ARCHER\020\003b\006proto"
    "3"
};
static ::absl::once_flag descriptor_table_Enum_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_Enum_2eproto = {
    false,
    false,
    361,
    descriptor_table_protodef_Enum_2eproto,
    "Enum.proto",
    &descriptor_table_Enum_2eproto_once,
    nullptr,
    0,
    0,
    schemas,
    file_default_instances,
    TableStruct_Enum_2eproto::offsets,
    file_level_enum_descriptors_Enum_2eproto,
    file_level_service_descriptors_Enum_2eproto,
};
namespace Protocol {
const ::google::protobuf::EnumDescriptor* KeyType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Enum_2eproto);
  return file_level_enum_descriptors_Enum_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t KeyType_internal_data_[] = {
    196608u, 32u, 941498240u, };
bool KeyType_IsValid(int value) {
  return 0 <= value && value <= 32 && ((7531985927u >> value) & 1) != 0;
}
const ::google::protobuf::EnumDescriptor* PlayerType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Enum_2eproto);
  return file_level_enum_descriptors_Enum_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t PlayerType_internal_data_[] = {
    262144u, 0u, };
bool PlayerType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_Enum_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
